<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invul</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activePickup</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Movement speed for player
moveSpeed = 6;
//Set the stun alarm to -1 because we need to be able to move initially
alarm[0] = -1;
inSafeZone = false;
startAnimation  = false;
startAnimationTwo  = false;

//Tells us the controller to use
var playerConroller;

//Bullet offset handles how far the shot will be from us  on creation
bulletOffset = 15;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop gamepad vibration
gamepad_set_vibration(playerControllerID, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invul</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop vibration for ability
gamepad_set_vibration(playerControllerID, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set shot vibration to stop
gamepad_set_vibration(playerControllerID, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement stun alarm
alarm[0] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shoots and moves
//Keyboard movement and shooting based on which player you are
if(playerControllerID == 0)
{   
    if(keyboard_check(vk_left))
    {
        x -= moveSpeed; 
        startAnimation = true;  
    }
    else if(keyboard_check(vk_right))
    {
        x += moveSpeed;
        startAnimation = true;
    }
    if(keyboard_check(vk_up))
    {
        y -= moveSpeed;
        startAnimation = true;
    }
    else if(keyboard_check(vk_down))
    {
        y += moveSpeed;
        startAnimation = true;
    }
    if (!keyboard_check(vk_down) &amp;&amp; !keyboard_check(vk_right) &amp;&amp; !keyboard_check(vk_up) &amp;&amp; !keyboard_check(vk_left)){
            startAnimation = false; 
    }
}
else if(playerControllerID == 1)
{
    if(keyboard_check(ord('A')))
    {
        x -= moveSpeed;
        //startAnimationTwo = true;   
    }   
    else if(keyboard_check(ord('D')))
    {
        x += moveSpeed;
        //startAnimationTwo = true;
    }
    if(keyboard_check(ord('W')))
    {
        y -= moveSpeed;
        //startAnimationTwo = true;
    }
    else if(keyboard_check(ord('S')))
    {
        y += moveSpeed;
        //startAnimationTwo = true;
    }
     
}
// limit movement
if (x &lt; 32) {
    x = 32;
}
if (x &gt; room_width - 32) {
    x = room_width - 32;
}
if (y &lt; 32) {
    y = 32;
}
if (y &gt; room_height - 32) {
    y = room_height - 32;
}
// alpha if invul
if (invul == 1) {
    image_alpha = 0.45;
} else {
    image_alpha = 1;
}

//Controller movement based on which player you are
horizontalAxisL = gamepad_axis_value(playerControllerID, gp_axislh);
verticalAxisL  = gamepad_axis_value(playerControllerID, gp_axislv);

//Check to see the values of axes
if(horizontalAxisL &gt; 0.5)
{
    //Trying to move right
    x += moveSpeed;
}
else if(horizontalAxisL &lt; -0.5)
{
    x -= moveSpeed;
}
if(verticalAxisL &gt; 0.5)
{
    y += moveSpeed;
}
else if(verticalAxisL &lt; -0.5)
{   
    y -= moveSpeed;
}


//Shooting in the direction of the right joystick
horizontalAxisR = gamepad_axis_value(playerControllerID, gp_axisrh);
verticalAxisR = gamepad_axis_value(playerControllerID, gp_axisrv);

//Basically make the player face towards the gamepad
if(horizontalAxisR &gt; 0.1 || horizontalAxisR &lt; -0.1 || verticalAxisR &gt; 0.1 || verticalAxisR &lt; -0.1)
{
    //Directional input 
    var shootingDirection = point_direction(0,0, horizontalAxisR, verticalAxisR);
    direction = shootingDirection;
}

//Aiming is based on mouse if no gamepad is present
if(ScrGetGamepadCount() == 0)
{
    direction = point_direction(x,y,mouse_x,mouse_y);
}

//Handle shooting direction towards mouse
if(mouse_check_button_pressed(mb_left) || gamepad_button_check_pressed(playerControllerID, gp_shoulderrb))
{
    with(instance_create(x + lengthdir_x(sprite_width + bulletOffset, direction), y + lengthdir_y(sprite_height + bulletOffset, direction), objBullet))
    {
        direction = other.direction;
        image_angle = direction;
        speed = bulletSpeed;
        owner = other.playerControllerID + 1;
    }
    //Make the controller vibrate
    gamepad_set_vibration(playerControllerID, 1, 1);
    alarm[1] = 15;
    //Screen shake
    objEffects.shake = objBullet.bulletShakeValue;
}

if(mouse_check_button_pressed(mb_middle) || gamepad_button_check_pressed(playerControllerID, gp_shoulderlb))
{
    if (activePickup == 1) {   
        instance_create(0-random(64), y-192, objTrainSpawner);
        instance_create(0-random(64), y-128, objTrainSpawner);
        instance_create(0-random(64), y-64, objTrainSpawner);
        instance_create(0-random(64), y+64, objTrainSpawner);
        instance_create(0-random(64), y+128, objTrainSpawner);
        instance_create(0-random(64), y+192, objTrainSpawner);
        //Sound for trains
        audio_play_sound(sndTrains, 3, false);
        //Vibration for train powerup
        gamepad_set_vibration(playerControllerID, 1, 1);
        alarm[2] = 180;
        
    } else if (activePickup == 2) {
        with (instance_create(x,y,objTimerRain)) {
            owner = other.playerControllerID + 1;
        }
        //Vibration for rain powerup
        gamepad_set_vibration(playerControllerID, 1, 1);
        alarm[2] = 60;
    } else if (activePickup == 3) {
        with(instance_create(x,y,objPwM)){
            owner = other.playerControllerID + 1;
        }
        //Vibration for missle powerup
        gamepad_set_vibration(playerControllerID, 1, 1);
        alarm[2] = 30;
        
    } else if (activePickup == 4) {
        var playerNumber = playerControllerID + 1;
        with (instance_create(x, y, objShield)) {
            owner = playerNumber;
        }
        //Play shield sound
        audio_play_sound(sndShieldUp, 3, false);
        //Vibration for shield powerup
        gamepad_set_vibration(playerControllerID, 1, 1);
        alarm[2] = 15;
    } else if (activePickup == 5) {
    
    }
    // reset active pickup
    activePickup = 0;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Safe Zone Logic
if(place_meeting(x, y, objSafeZone))
{
    inSafeZone = true;
}
else
{
    inSafeZone = false;
}
if(inSafeZone)
{
    //If we are in a safe zone, a collision with a bullet will simply push us 
    //in its direction and destroy the bullet
    hitByBullet = instance_place(x, y, objBullet);
    if(hitByBullet)
    {
        //Set movement stun alarm
        alarm[0] = room_speed/3; //one third of a second of stun
        //Hit by bullet
        pushForceX = lengthdir_x(hitByBullet.pushForce, hitByBullet.direction);
        pushForceY = lengthdir_y(hitByBullet.pushForce, hitByBullet.direction);
        //Apply force to player
        x += pushForceX;
        y += pushForceY;
        //Destroy bullet
        with(hitByBullet)
        {
            instance_destroy();
        }
    }
}
else
{
    //If we aren't in the safe zone, we want to kill the player
    hitByBullet = instance_place(x, y, objBullet);
    if(hitByBullet &amp;&amp; invul == 0)
    {
        //If hit by other player's bullet, destroy player and bullet
        if (hitByBullet.owner != playerControllerID + 1) {
            // increase score
            if (playerControllerID == 0) {
                global.player2score++;
            } else {
                global.player1score++;
            }
            // add gore
            var piecesNumber = 15 + random(10);
            for (var i=0; i &lt; piecesNumber; i++) {
                with (instance_create(x-15+random(30), y-15+random(30), objGoreRed)){
                    vspeed = other.hitByBullet.vspeed * random_range(0.8, 1.2);
                    hspeed = other.hitByBullet.hspeed * random_range(0.8, 1.2);
                }
            }
            // respawn
            x = 50 + random(room_width - 100);
            y = 50 + random(room_height - 100);
            invul = 1;
            alarm[10] = 150;
            //Play death sound
            audio_play_sound(sndDeath, 5, false);
            // todo: add invulnerability timer?
            with(hitByBullet)
            {
                instance_destroy();
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPickupShield">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activePickup</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>4</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sndPickup</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPickupLockOn">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activePickup</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sndPickup</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPickupTrainRain">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activePickup</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sndPickup</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPickupSideTrains">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activePickup</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sndPickup</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
